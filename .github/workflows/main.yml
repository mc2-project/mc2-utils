name: Continous Integration

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master
  
jobs:
  build:
    name: Build mc2-utils
    # Define the OS to run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install apt package dependencies
        run: |
          # Install OpenEnclave 0.12.0
          echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
          wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main" | sudo tee /etc/apt/sources.list.d/llvm-toolchain-bionic-7.list
          wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main" | sudo tee /etc/apt/sources.list.d/msprod.list
          wget -qO - https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -

          sudo apt update
          sudo apt -y install clang-7 libssl-dev gdb libsgx-enclave-common libsgx-enclave-common-dev libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave=0.12.0 

          # CMake
          wget https://github.com/Kitware/CMake/releases/download/v3.15.6/cmake-3.15.6-Linux-x86_64.sh

          # Mbed TLS
          sudo apt-get install -y libmbedtls-dev

      - name: Build enclave library
        run: | 
          mkdir build
          cd build
          cmake ..
          make -j4
      
      - name: Build host library
        run: | 
          rm -rf build
          mkdir build
          cd build
          cmake .. -DHOST="ON"
          make -j4

      - name: Build unittests 
        run: |
          rm -rf build
          mkdir build
          cd build
          cmake .. -DHOST="ON" -DUNITTEST="ON"
          make -j4
  
  test:
    name: Test mc2-utils
    # Define the OS to run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install apt package dependencies
        run: |
          # Install OpenEnclave 0.12.0
          echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
          wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main" | sudo tee /etc/apt/sources.list.d/llvm-toolchain-bionic-7.list
          wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main" | sudo tee /etc/apt/sources.list.d/msprod.list
          wget -qO - https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -

          sudo apt update
          sudo apt -y install clang-7 libssl-dev gdb libsgx-enclave-common libsgx-enclave-common-dev libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave=0.12.0 

          # CMake
          wget https://github.com/Kitware/CMake/releases/download/v3.15.6/cmake-3.15.6-Linux-x86_64.sh

          # Mbed TLS
          sudo apt-get install -y libmbedtls-dev

      - name: Build unittests 
        run: |
          rm -rf build
          mkdir build
          cd build
          cmake .. -DHOST="ON" -DUNITTEST="ON"
          make -j4

      - name: Run unittests 
        run: |
          cd build
          make test
